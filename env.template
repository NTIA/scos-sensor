# -*- sh -*-

# Copy env.template to env and modify


# Mark all the following variables for export
set -o allexport

# https://docs.djangoproject.com/en/1.11/ref/settings/#std:setting-SECRET_KEY
# SECURITY WARNING: generate unique key with `manage.py generate_secret_key`
SECRET_KEY='!j1&*$wnrkrtc-74cc7_^#n6r3om$6s#!fy=zkd_xp(gkikl+8'

# SECURITY WARNING: don't run with debug turned on in production!
# Use either true or false
DEBUG=true

# A space-separated list of domain names and IPs
DOMAINS="localhost $(hostname -d) $(hostname -s).local"
IPS="$(hostname -I) 127.0.0.1"
FQDN="$(hostname -f)"

# SECURITY WARNING: You should be using certs from a trusted authority.
#                   If you don't have any, try letsencrypt or a similar service.
# Provide the absolute path to your ssl certificate and key
# Paths relative to configs/certs
REPO_ROOT=$(git rev-parse --show-toplevel)
SSL_CERT_PATH=sensor01.pem
SSL_KEY_PATH=sensor01.pem
SSL_CA_PATH=scos_test_ca.crt
# Use latest as default for local development
DOCKER_TAG=latest
GIT_BRANCH="git:$(git rev-parse --abbrev-ref HEAD)@$(git rev-parse --short HEAD)"

# If admin user email and password set, admin user will be generated.
ADMIN_EMAIL="admin@example.com"
ADMIN_PASSWORD=password

# Session password for Postgres. Username is "postgres".
# SECURITY WARNING: generate unique key with something like
#                   `openssl rand -base64 12`
POSTGRES_PASSWORD='pPyNxh6rGQuLws93'

# Set to enable monitoring sensors with your sentry.io account
SENTRY_DSN=

if $DEBUG; then
    GUNICORN_LOG_LEVEL=debug
else
    GUNICORN_LOG_LEVEL=info
fi

# Set to false to disable SSL cert verification in the callback POST request
CALLBACK_SSL_VERIFICATION=true

# set default manager FQDN and IP to this machine
MANAGER_FQDN="$(hostname -f)"
MANAGER_IP="$(hostname -I | cut -d' ' -f1)"

BASE_IMAGE=ghcr.io/ntia/scos-tekrsa/tekrsa_usb:0.2.1
# Default callback api/results
# Set to OAUTH if using OAuth Password Flow Authentication, callback url needs to be api/v2/results
CALLBACK_AUTHENTICATION=TOKEN

CLIENT_ID=sensor01.sms.internal
CLIENT_SECRET=sensor-secret

OAUTH_TOKEN_URL=https://scosmgrqa01.sms.internal:443/authserver/oauth/token
# Sensor certificate with private key used as client cert
PATH_TO_CLIENT_CERT=sensor01.pem
# Trusted Certificate Authority certificate to verify authserver and callback URL server certificate
PATH_TO_VERIFY_CERT=scos_test_ca.crt
# Path relative to configs/certs
PATH_TO_JWT_PUBLIC_KEY=jwt_pubkey.pem
# set to JWT to enable JWT authentication
AUTHENTICATION=TOKEN
