# Generated by Django 3.0.4 on 2020-03-18 16:31

import datetime

import django.db.models.deletion
import jsonfield.fields
from django.db import migrations, models
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [("schedule", "0001_initial")]

    operations = [
        migrations.CreateModel(
            name="TaskResult",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "task_id",
                    models.IntegerField(
                        help_text="The id of the task relative to the result"
                    ),
                ),
                (
                    "started",
                    models.DateTimeField(
                        default=datetime.datetime(2019, 5, 16, 23, 0, tzinfo=utc),
                        help_text="The time the task started",
                    ),
                ),
                (
                    "finished",
                    models.DateTimeField(
                        default=datetime.datetime(2019, 5, 16, 23, 0, tzinfo=utc),
                        help_text="The time the task finished",
                    ),
                ),
                (
                    "duration",
                    models.DurationField(
                        default=datetime.timedelta(0),
                        help_text="Task duration in seconds",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[(1, "success"), (2, "failure"), (3, "in-progress")],
                        default="in-progress",
                        help_text='"success" or "failure"',
                        max_length=11,
                    ),
                ),
                (
                    "detail",
                    models.CharField(
                        blank=True, help_text="Arbitrary detail string", max_length=512
                    ),
                ),
                (
                    "schedule_entry",
                    models.ForeignKey(
                        help_text="The schedule entry relative to the result",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="task_results",
                        to="schedule.ScheduleEntry",
                    ),
                ),
            ],
            options={
                "ordering": ("task_id",),
                "unique_together": {("schedule_entry", "task_id")},
            },
        ),
        migrations.CreateModel(
            name="Acquisition",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recording_id",
                    models.IntegerField(
                        default=0,
                        help_text="The id of the recording relative to the task",
                    ),
                ),
                (
                    "metadata",
                    jsonfield.fields.JSONField(
                        help_text="The sigmf meta data for the acquisition"
                    ),
                ),
                (
                    "data",
                    models.FileField(null=True, upload_to="blob/%Y/%m/%d/%H/%M/%S"),
                ),
                (
                    "task_result",
                    models.ForeignKey(
                        help_text="The task_result relative to the acquisition",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data",
                        to="tasks.TaskResult",
                    ),
                ),
            ],
            options={
                "db_table": "acquisitions",
                "ordering": ("task_result", "recording_id"),
                "unique_together": {("task_result", "recording_id")},
            },
        ),
    ]
