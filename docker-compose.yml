version: '3'

services:
  api:
    healthcheck:
      test: test ! -e /sdr_unhealthy
      interval: 10s
      timeout: 1s
      retries: 1
    restart: always
    labels:
      autoheal: "true"  # allow docker-autoheal to restart if unhealthy
    image: smsntia/scos-sensor
    environment:
      - DEBUG
      - DOMAINS
      - IPS
      - SECRET_KEY
      - GUNICORN_LOG_LEVEL
    expose:
      - '8000'
    volumes:
      - ./db.sqlite3:/db.sqlite3
      - ${REPO_ROOT}:/opt/scos-sensor
    devices:
      - /dev/bus/usb:/dev/bus/usb:rw
    command: /entrypoints/api_entrypoint.sh

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - '80:80'
      - '443:443'
    command: >-
      /bin/sh -c
      "envsubst '$$DOMAINS'
      < /etc/nginx/nginx.conf.template
      > /etc/nginx/conf.d/default.conf
      && exec nginx -g 'daemon off;'"
    volumes:
      - ./nginx/conf.template:/etc/nginx/nginx.conf.template:ro
      - ./src/static:/var/www/scos-sensor/static:ro
      - ${SSL_CERT_PATH}:/etc/ssl/certs/ssl-cert.pem:ro
      - ${SSL_KEY_PATH}:/etc/ssl/private/ssl-cert.key:ro
    environment:
      - DOMAINS

  # This is a stop-gap until Docker adds the capability to restart unhealthy
  # containers natively.
  #
  # https://github.com/moby/moby/issues/28400
  # https://github.com/willfarrell/docker-autoheal
  autoheal:
    image: alpine
    restart: always
    depends_on:
      - api
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./entrypoints/autoheal_entrypoint.sh:/entrypoints/autoheal_entrypoint.sh:ro
    command: /bin/sh -c "apk add --no-cache jq curl && exec /entrypoints/autoheal_entrypoint.sh"

  # logspout:
  #   restart: always
  #   image: gliderlabs/logspout
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
