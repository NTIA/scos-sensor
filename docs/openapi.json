{
    "swagger": "2.0",
    "info": {
        "title": "SCOS Sensor API",
        "description": "A RESTful API for controlling a SCOS-compatible sensor.\n\n# Errors\n\nThe API uses standard HTTP status codes to indicate the success or failure of\nthe API call. The body of the response will be JSON in the following format:\n\n## 400 Bad Request (Parse Error)\n\n```json\n{\n    \"field_name\": [\n        \"description of first error\",\n        \"description of second error\",\n        ...\n    ]\n}\n```\n\n## 400 Bad Request (Protected Error)\n\n```json\n{\n    \"detail\": \"description of error\",\n    \"protected_objects\": [\n        \"url_to_protected_item_1\",\n        \"url_to_protected_item_2\",\n        ...\n    ]\n}\n```\n\n## 409 Conflict (DB Integrity Error)\n\n```json\n{\n    \"detail\": \"description of error\"\n}\n```\n\n",
        "contact": {
            "email": "sms@ntia.doc.gov"
        },
        "license": {
            "name": "NTIA/ITS",
            "url": "https://github.com/NTIA/scos-sensor/blob/master/LICENSE.md"
        },
        "version": "v1"
    },
    "host": "testserver",
    "schemes": [
        "http"
    ],
    "basePath": "/api",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "token": {
            "description": "Tokens are automatically generated for all users. You can view yours by going to your User Details view in the browsable API at `/api/v1/users/me` and looking for the `auth_token` key. Non-admin user accounts do not initially have a password and so can not log in to the browsable API. To set a password for a user (for testing purposes), an admin can do that in the Sensor Configuration Portal, but only the account's token should be stored and used for general purpose API access. Example cURL call: `curl -kLsS -H \"Authorization: Token 529c30e6e04b3b546f2e073e879b75fdfa147c15\" https://greyhound5.sms.internal/api/v1`",
            "in": "header",
            "name": "Token",
            "type": "apiKey"
        }
    },
    "security": [
        {
            "token": []
        }
    ],
    "paths": {
        "/v1/": {
            "get": {
                "operationId": "v1_list",
                "description": "SCOS sensor API root.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": []
        },
        "/v1/capabilities/": {
            "get": {
                "operationId": "v1_capabilities_list",
                "description": "The capabilites of the sensor.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": []
        },
        "/v1/capabilities/{format}": {
            "get": {
                "operationId": "v1_capabilities_read",
                "description": "The capabilites of the sensor.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/schedule/": {
            "get": {
                "operationId": "v1_schedule_list",
                "description": "Retrieves the current schedule.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AdminScheduleEntry"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "post": {
                "operationId": "v1_schedule_create",
                "description": "Return NO CONTENT when input is valid but validate_only is True.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminScheduleEntry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminScheduleEntry"
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": []
        },
        "/v1/schedule/{name}/": {
            "get": {
                "operationId": "v1_schedule_read",
                "description": "Returns the specified schedule entry.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminScheduleEntry"
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "put": {
                "operationId": "v1_schedule_update",
                "description": "Updates the specified schedule entry.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminScheduleEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminScheduleEntry"
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "patch": {
                "operationId": "v1_schedule_partial_update",
                "description": "Partially updates the specified schedule entry.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminScheduleEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminScheduleEntry"
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "delete": {
                "operationId": "v1_schedule_delete",
                "description": "Deletes the specified schedule entry.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "description": "[Required] The unique identifier used in URLs and filenames",
                    "required": true,
                    "type": "string",
                    "format": "slug",
                    "pattern": "^[-a-zA-Z0-9_]+$"
                }
            ]
        },
        "/v1/status": {
            "get": {
                "operationId": "v1_status_list",
                "description": "The status overview of the sensor.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": []
        },
        "/v1/status{format}": {
            "get": {
                "operationId": "v1_read",
                "description": "The status overview of the sensor.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/tasks/": {
            "get": {
                "operationId": "v1_tasks_list",
                "description": "Provides links to upcoming and completed tasks",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": []
        },
        "/v1/tasks/completed/": {
            "get": {
                "operationId": "v1_tasks_completed_list",
                "description": "Returns an overview of how many results are available per schedule\nentry.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaskResultsOverview"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": []
        },
        "/v1/tasks/completed/{schedule_entry_name}/": {
            "get": {
                "operationId": "v1_tasks_completed_list",
                "description": "Returns a list of all results created by the given schedule entry.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaskResult"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "delete": {
                "operationId": "v1_tasks_completed_delete",
                "description": "Deletes all results created by the given schedule entry.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "schedule_entry_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/tasks/completed/{schedule_entry_name}/archive/": {
            "get": {
                "operationId": "v1_tasks_completed_archive",
                "description": "Downloads the acquisition's SigMF archive.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaskResult"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "schedule_entry_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/tasks/completed/{schedule_entry_name}/archive{format}": {
            "get": {
                "operationId": "v1_tasks_archive",
                "description": "Downloads the acquisition's SigMF archive.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaskResult"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "schedule_entry_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/tasks/completed/{schedule_entry_name}/{task_id}/": {
            "get": {
                "operationId": "v1_tasks_completed_read",
                "description": "Returns a specific result.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TaskResult"
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "delete": {
                "operationId": "v1_tasks_completed_delete",
                "description": "Deletes the specified acquisition.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "schedule_entry_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "task_id",
                    "in": "path",
                    "description": "The id of the task relative to the result",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v1/tasks/completed/{schedule_entry_name}/{task_id}/archive": {
            "get": {
                "operationId": "v1_tasks_completed_archive",
                "description": "Downloads the acquisition's SigMF archive.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TaskResult"
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "schedule_entry_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "task_id",
                    "in": "path",
                    "description": "The id of the task relative to the result",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v1/tasks/completed/{schedule_entry_name}/{task_id}/archive{format}": {
            "get": {
                "operationId": "v1_tasks_archive",
                "description": "Downloads the acquisition's SigMF archive.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TaskResult"
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "schedule_entry_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "task_id",
                    "in": "path",
                    "description": "The id of the task relative to the result",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v1/tasks/completed/{schedule_entry_name}/{task_id}{format}": {
            "get": {
                "operationId": "v1_tasks_completed_read",
                "description": "Returns a specific result.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TaskResult"
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "delete": {
                "operationId": "v1_tasks_completed_delete",
                "description": "Deletes the specified acquisition.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "schedule_entry_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "task_id",
                    "in": "path",
                    "description": "The id of the task relative to the result",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v1/tasks/completed/{schedule_entry_name}{format}": {
            "get": {
                "operationId": "v1_tasks_completed_list",
                "description": "Returns a list of all results created by the given schedule entry.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaskResult"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "delete": {
                "operationId": "v1_tasks_completed_delete",
                "description": "Deletes all results created by the given schedule entry.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "schedule_entry_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/tasks/completed{format}": {
            "get": {
                "operationId": "v1_tasks_list",
                "description": "Returns an overview of how many results are available per schedule\nentry.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaskResultsOverview"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/tasks/upcoming/": {
            "get": {
                "operationId": "v1_tasks_upcoming_list",
                "description": "Returns a snapshot of upcoming tasks.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": []
        },
        "/v1/tasks/upcoming{format}": {
            "get": {
                "operationId": "v1_tasks_read",
                "description": "Returns a snapshot of upcoming tasks.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/tasks/{format}": {
            "get": {
                "operationId": "v1_tasks_read",
                "description": "Provides links to upcoming and completed tasks",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/{format}": {
            "get": {
                "operationId": "v1_read",
                "description": "SCOS sensor API root.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "v1"
                ]
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        }
    },
    "definitions": {
        "AdminScheduleEntry": {
            "required": [
                "name",
                "action"
            ],
            "type": "object",
            "properties": {
                "self": {
                    "title": "Self",
                    "description": "The url of the entry",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "description": "[Required] The unique identifier used in URLs and filenames",
                    "type": "string",
                    "format": "slug",
                    "pattern": "^[-a-zA-Z0-9_]+$",
                    "maxLength": 50,
                    "minLength": 1
                },
                "action": {
                    "title": "Action",
                    "description": "[Required] The name of the action to be scheduled",
                    "type": "string",
                    "enum": [
                        "logger",
                        "test_multi_frequency_iq_action",
                        "test_single_frequency_iq_action",
                        "test_single_frequency_m4s_action",
                        "admin_logger",
                        "test_monitor_radio",
                        "test_sync_gps"
                    ]
                },
                "priority": {
                    "title": "Priority",
                    "description": "Lower number is higher priority (default=10)",
                    "type": "integer",
                    "maximum": 19,
                    "minimum": -20,
                    "x-nullable": true
                },
                "start": {
                    "title": "Start",
                    "description": "UTC time (ISO 8601) to start, or leave blank for 'now'",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "stop": {
                    "title": "Absolute stop",
                    "description": "UTC time (ISO 8601) to stop, or leave blank for 'never' (not valid with relative stop)",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "relative_stop": {
                    "title": "Relative stop",
                    "description": "Integer seconds after start to stop, or leave blank for 'never' (not valid with absolute stop)",
                    "type": "integer",
                    "minimum": 1,
                    "x-nullable": true
                },
                "interval": {
                    "title": "Interval",
                    "description": "Seconds between tasks, or leave blank to run once",
                    "type": "integer",
                    "minimum": 1,
                    "x-nullable": true
                },
                "is_active": {
                    "title": "Is active",
                    "description": "Indicates whether the entry should be removed from the scheduler without removing it from the system",
                    "type": "boolean",
                    "readOnly": true
                },
                "is_private": {
                    "title": "Is private",
                    "description": "Indicates whether the entry, and resulting data, are only visible to admins",
                    "type": "boolean"
                },
                "callback_url": {
                    "title": "Callback url",
                    "description": "If given, the scheduler will POST a `TaskResult` JSON object to this URL after each task completes",
                    "type": "string",
                    "format": "uri",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "next_task_time": {
                    "title": "Next task time",
                    "description": "UTC time (ISO 8601) the next task is scheduled for",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "next_task_id": {
                    "title": "Next task id",
                    "description": "The id of the next task to be executed",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "description": "The date the entry was created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "description": "The date the entry was modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "owner": {
                    "title": "Owner",
                    "description": "The name of the user who owns the entry",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "task_results": {
                    "title": "Task results",
                    "description": "The list of results related to the entry",
                    "type": "string",
                    "readOnly": true
                },
                "validate_only": {
                    "title": "Validate only",
                    "description": "Only validate the input, do not modify the schedule",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "TaskResultsOverview": {
            "type": "object",
            "properties": {
                "archive": {
                    "title": "Archive",
                    "description": "The link to a multi-recording archive of all available acquisitions",
                    "type": "string",
                    "readOnly": true
                },
                "task_results": {
                    "title": "Task results",
                    "description": "The link to the task results",
                    "type": "string",
                    "readOnly": true
                },
                "task_results_available": {
                    "title": "Task results available",
                    "description": "The number of available results",
                    "type": "string",
                    "readOnly": true
                },
                "schedule_entry": {
                    "title": "Schedule entry",
                    "description": "The related schedule entry for the result",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Acquisition": {
            "required": [
                "metadata"
            ],
            "type": "object",
            "properties": {
                "recording_id": {
                    "title": "Recording id",
                    "description": "The id of the recording relative to the task",
                    "type": "integer"
                },
                "archive": {
                    "title": "Archive",
                    "description": "The url to download a SigMF archive of this acquisition",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "metadata": {
                    "title": "Metadata",
                    "description": "The SigMF metadata for the acquisition",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "TaskResult": {
            "required": [
                "task_id",
                "started",
                "finished",
                "data"
            ],
            "type": "object",
            "properties": {
                "self": {
                    "title": "Self",
                    "description": "The url of the result",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "schedule_entry": {
                    "title": "Schedule entry",
                    "description": "The url of the parent schedule entry",
                    "type": "string",
                    "readOnly": true
                },
                "task_id": {
                    "title": "Task id",
                    "description": "The id of the task relative to the result",
                    "type": "integer"
                },
                "status": {
                    "title": "Status",
                    "description": "\"success\" or \"failure\"",
                    "type": "string",
                    "enum": [
                        1,
                        2,
                        3
                    ]
                },
                "detail": {
                    "title": "Detail",
                    "description": "Arbitrary detail string",
                    "type": "string",
                    "maxLength": 512
                },
                "started": {
                    "title": "Started",
                    "description": "The time the task started",
                    "type": "string",
                    "format": "date-time"
                },
                "finished": {
                    "title": "Finished",
                    "description": "The time the task finished",
                    "type": "string",
                    "format": "date-time"
                },
                "duration": {
                    "title": "Duration",
                    "description": "Task duration in seconds",
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Acquisition"
                    }
                }
            }
        }
    }
}