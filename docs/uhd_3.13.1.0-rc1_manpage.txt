Help on module uhd.usrp in uhd:

NAME
    uhd.usrp

DESCRIPTION
    @package usrp
    Python UHD module containing the MultiUSRP and other objects

CLASSES
    libpyuhd.usrp.multi_usrp(Boost.Python.instance)
        MultiUSRP

    class MultiUSRP(libpyuhd.usrp.multi_usrp)
     |  MultiUSRP object for controlling devices
     |
     |  Method resolution order:
     |      MultiUSRP
     |      libpyuhd.usrp.multi_usrp
     |      Boost.Python.instance
     |      builtins.object
     |
     |  Methods defined here:
     |
     |  __init__(self, args='')
     |      MultiUSRP constructor
     |
     |  recv_num_samps(self, num_samps, freq, rate=1000000.0, channels=(0,), gain=10)
     |      RX a finite number of samples from the USRP
     |      :param num_samps: number of samples to RX
     |      :param freq: RX frequency (Hz)
     |      :param rate: RX sample rate (Hz)
     |      :param channels: list of channels to RX on
     |      :param gain: RX gain (dB)
     |      :return: numpy array of complex floating-point samples (fc32)
     |
     |  send_waveform(self, waveform_proto, duration, freq, rate=1000000.0, channels=(0,), gain=10)
     |      TX a finite number of samples from the USRP
     |      :param waveform_proto: numpy array of samples to TX
     |      :param duration: time in seconds to transmit at the supplied rate
     |      :param freq: TX frequency (Hz)
     |      :param rate: TX sample rate (Hz)
     |      :param channels: list of channels to TX on
     |      :param gain: TX gain (dB)
     |      :return: the number of transmitted samples
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from libpyuhd.usrp.multi_usrp:
     |
     |  __reduce__ = <unnamed Boost.Python function>(...)
     |
     |  clear_command_time(...)
     |      clear_command_time( (multi_usrp)arg1 [, (int)arg2]) -> None :
     |
     |          C++ signature :
     |              void clear_command_time(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  enumerate_registers(...)
     |      enumerate_registers( (multi_usrp)arg1 [, (int)arg2]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > enumerate_registers(uhd:
:usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_clock_source(...)
     |      get_clock_source( (multi_usrp)arg1, (int)arg2) -> str :
     |
     |          C++ signature :
     |              std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > get_clock_source(u
hd::usrp::multi_usrp {lvalue},unsigned long)
     |
     |  get_clock_sources(...)
     |      get_clock_sources( (multi_usrp)arg1, (int)arg2) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_clock_sources(uhd::u
srp::multi_usrp {lvalue},unsigned long)
     |
     |  get_fe_rx_freq_range(...)
     |      get_fe_rx_freq_range( (multi_usrp)arg1 [, (int)arg2]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_fe_rx_freq_range(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_fe_tx_freq_range(...)
     |      get_fe_tx_freq_range( (multi_usrp)arg1 [, (int)arg2]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_fe_tx_freq_range(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_filter(...)
     |      get_filter( (multi_usrp)arg1, (str)arg2) -> filter_info_base :
     |
     |          C++ signature :
     |              boost::shared_ptr<uhd::filter_info_base> get_filter(uhd::usrp::multi_usrp {lvalue},std::__cxx11::b
asic_string<char, std::char_traits<char>, std::allocator<char> >)
     |
     |  get_filter_names(...)
     |      get_filter_names( (multi_usrp)arg1 [, (str)arg2]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_filter_names(uhd::us
rp::multi_usrp {lvalue} [,std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >])
     |
     |  get_gpio_attr(...)
     |      get_gpio_attr( (multi_usrp)arg1, (str)arg2, (str)arg3 [, (int)arg4]) -> int :
     |
     |          C++ signature :
     |              unsigned int get_gpio_attr(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char, std::ch
ar_traits<char>, std::allocator<char> >,std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>
> [,unsigned long])
     |
     |  get_gpio_banks(...)
     |      get_gpio_banks( (multi_usrp)arg1, (int)arg2) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_gpio_banks(uhd::usrp
::multi_usrp {lvalue},unsigned long)
     |
     |  get_master_clock_rate(...)
     |      get_master_clock_rate( (multi_usrp)arg1 [, (int)arg2]) -> float :
     |
     |          C++ signature :
     |              double get_master_clock_rate(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_master_clock_rate_range(...)
     |      get_master_clock_rate_range( (multi_usrp)arg1 [, (int)arg2]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_master_clock_rate_range(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_mboard_name(...)
     |      get_mboard_name( (multi_usrp)arg1 [, (int)arg2]) -> str :
     |
     |          C++ signature :
     |              std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > get_mboard_name(uh
d::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_mboard_sensor(...)
     |      get_mboard_sensor( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> sensor_value :
     |
     |          C++ signature :
     |              uhd::sensor_value_t get_mboard_sensor(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<ch
ar, std::char_traits<char>, std::allocator<char> > [,unsigned long])
     |
     |  get_mboard_sensor_names(...)
     |      get_mboard_sensor_names( (multi_usrp)arg1 [, (int)arg2]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_mboard_sensor_names(
uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_normalized_rx_gain(...)
     |      get_normalized_rx_gain( (multi_usrp)arg1 [, (int)arg2]) -> float :
     |
     |          C++ signature :
     |              double get_normalized_rx_gain(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_normalized_tx_gain(...)
     |      get_normalized_tx_gain( (multi_usrp)arg1 [, (int)arg2]) -> float :
     |
     |          C++ signature :
     |              double get_normalized_tx_gain(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_num_mboards(...)
     |      get_num_mboards( (multi_usrp)arg1) -> int :
     |
     |          C++ signature :
     |              unsigned long get_num_mboards(uhd::usrp::multi_usrp {lvalue})
     |
     |  get_pp_string(...)
     |      get_pp_string( (multi_usrp)arg1) -> str :
     |
     |          C++ signature :
     |              std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > get_pp_string(uhd:
:usrp::multi_usrp {lvalue})
     |
     |  get_register_info(...)
     |      get_register_info( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> register_info :
     |
     |          C++ signature :
     |              uhd::usrp::multi_usrp::register_info_t get_register_info(uhd::usrp::multi_usrp {lvalue},std::__cxx
11::basic_string<char, std::char_traits<char>, std::allocator<char> > [,unsigned long])
     |
     |  get_rx_antenna(...)
     |      get_rx_antenna( (multi_usrp)arg1 [, (int)arg2]) -> str :
     |
     |          C++ signature :
     |              std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > get_rx_antenna(uhd
::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_rx_antennas(...)
     |      get_rx_antennas( (multi_usrp)arg1 [, (int)arg2]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_rx_antennas(uhd::usr
p::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_rx_bandwidth(...)
     |      get_rx_bandwidth( (multi_usrp)arg1 [, (int)arg2]) -> float :
     |
     |          C++ signature :
     |              double get_rx_bandwidth(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_rx_bandwidth_range(...)
     |      get_rx_bandwidth_range( (multi_usrp)arg1 [, (int)arg2]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_rx_bandwidth_range(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_rx_dboard_iface(...)
     |      get_rx_dboard_iface( (multi_usrp)arg1 [, (int)arg2]) -> dboard_iface :
     |
     |          C++ signature :
     |              boost::shared_ptr<uhd::usrp::dboard_iface> get_rx_dboard_iface(uhd::usrp::multi_usrp {lvalue} [,un
signed long])
     |
     |  get_rx_freq(...)
     |      get_rx_freq( (multi_usrp)arg1 [, (int)arg2]) -> float :
     |
     |          C++ signature :
     |              double get_rx_freq(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_rx_freq_range(...)
     |      get_rx_freq_range( (multi_usrp)arg1 [, (int)arg2]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_rx_freq_range(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_rx_gain(...)
     |      get_rx_gain( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> float :
     |
     |          C++ signature :
     |              double get_rx_gain(uhd::usrp::multi_usrp*,std::__cxx11::basic_string<char, std::char_traits<char>,
 std::allocator<char> > [,unsigned long])
     |
     |      get_rx_gain( (multi_usrp)arg1 [, (int)arg2]) -> float :
     |
     |          C++ signature :
     |              double get_rx_gain(uhd::usrp::multi_usrp* [,unsigned long])
     |
     |  get_rx_gain_names(...)
     |      get_rx_gain_names( (multi_usrp)arg1 [, (int)arg2]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_rx_gain_names(uhd::u
srp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_rx_gain_profile(...)
     |      get_rx_gain_profile( (multi_usrp)arg1 [, (int)arg2]) -> str :
     |
     |          C++ signature :
     |              std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > get_rx_gain_profil
e(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_rx_gain_profile_names(...)
     |      get_rx_gain_profile_names( (multi_usrp)arg1 [, (int)arg2]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_rx_gain_profile_name
s(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_rx_gain_range(...)
     |      get_rx_gain_range( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_rx_gain_range(uhd::usrp::multi_usrp*,std::__cxx11::basic_string<char, std::c
har_traits<char>, std::allocator<char> > [,unsigned long])
     |
     |      get_rx_gain_range( (multi_usrp)arg1 [, (int)arg2]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_rx_gain_range(uhd::usrp::multi_usrp* [,unsigned long])
     |
     |  get_rx_lo_export_enabled(...)
     |      get_rx_lo_export_enabled( (multi_usrp)arg1 [, (str)arg2 [, (int)arg3]]) -> bool :
     |
     |          C++ signature :
     |              bool get_rx_lo_export_enabled(uhd::usrp::multi_usrp {lvalue} [,std::__cxx11::basic_string<char, st
d::char_traits<char>, std::allocator<char> > [,unsigned long]])
     |
     |  get_rx_lo_freq(...)
     |      get_rx_lo_freq( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> float :
     |
     |          C++ signature :
     |              double get_rx_lo_freq(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char, std::char_tr
aits<char>, std::allocator<char> > [,unsigned long])
     |
     |  get_rx_lo_freq_range(...)
     |      get_rx_lo_freq_range( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_rx_lo_freq_range(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<c
har, std::char_traits<char>, std::allocator<char> > [,unsigned long])
     |
     |  get_rx_lo_names(...)
     |      get_rx_lo_names( (multi_usrp)arg1 [, (int)arg2]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_rx_lo_names(uhd::usr
p::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_rx_lo_source(...)
     |      get_rx_lo_source( (multi_usrp)arg1 [, (str)arg2 [, (int)arg3]]) -> str :
     |
     |          C++ signature :
     |              std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > get_rx_lo_source(u
hd::usrp::multi_usrp {lvalue} [,std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > [,unsi
gned long]])
     |
     |  get_rx_lo_sources(...)
     |      get_rx_lo_sources( (multi_usrp)arg1 [, (str)arg2 [, (int)arg3]]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_rx_lo_sources(uhd::u
srp::multi_usrp {lvalue} [,std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > [,unsigned
long]])
     |
     |  get_rx_num_channels(...)
     |      get_rx_num_channels( (multi_usrp)arg1) -> int :
     |
     |          C++ signature :
     |              unsigned long get_rx_num_channels(uhd::usrp::multi_usrp {lvalue})
     |
     |  get_rx_rate(...)
     |      get_rx_rate( (multi_usrp)arg1 [, (int)arg2]) -> float :
     |
     |          C++ signature :
     |              double get_rx_rate(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_rx_rates(...)
     |      get_rx_rates( (multi_usrp)arg1 [, (int)arg2]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_rx_rates(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_rx_sensor(...)
     |      get_rx_sensor( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> sensor_value :
     |
     |          C++ signature :
     |              uhd::sensor_value_t get_rx_sensor(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char,
std::char_traits<char>, std::allocator<char> > [,unsigned long])
     |
     |  get_rx_sensor_names(...)
     |      get_rx_sensor_names( (multi_usrp)arg1 [, (int)arg2]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_rx_sensor_names(uhd:
:usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_rx_stream(...)
     |      get_rx_stream( (multi_usrp)arg1, (stream_args)arg2) -> rx_streamer :
     |
     |          C++ signature :
     |              boost::shared_ptr<uhd::rx_streamer> get_rx_stream(uhd::usrp::multi_usrp {lvalue},uhd::stream_args_
t)
     |
     |  get_rx_subdev_name(...)
     |      get_rx_subdev_name( (multi_usrp)arg1 [, (int)arg2]) -> str :
     |
     |          C++ signature :
     |              std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > get_rx_subdev_name
(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_rx_subdev_spec(...)
     |      get_rx_subdev_spec( (multi_usrp)arg1 [, (int)arg2]) -> subdev_spec :
     |
     |          C++ signature :
     |              uhd::usrp::subdev_spec_t get_rx_subdev_spec(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_time_last_pps(...)
     |      get_time_last_pps( (multi_usrp)arg1 [, (int)arg2]) -> time_spec :
     |
     |          C++ signature :
     |              uhd::time_spec_t get_time_last_pps(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_time_now(...)
     |      get_time_now( (multi_usrp)arg1 [, (int)arg2]) -> time_spec :
     |
     |          C++ signature :
     |              uhd::time_spec_t get_time_now(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_time_source(...)
     |      get_time_source( (multi_usrp)arg1, (int)arg2) -> str :
     |
     |          C++ signature :
     |              std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > get_time_source(uh
d::usrp::multi_usrp {lvalue},unsigned long)
     |
     |  get_time_sources(...)
     |      get_time_sources( (multi_usrp)arg1, (int)arg2) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_time_sources(uhd::us
rp::multi_usrp {lvalue},unsigned long)
     |
     |  get_time_synchronized(...)
     |      get_time_synchronized( (multi_usrp)arg1) -> bool :
     |
     |          C++ signature :
     |              bool get_time_synchronized(uhd::usrp::multi_usrp {lvalue})
     |
     |  get_tx_antenna(...)
     |      get_tx_antenna( (multi_usrp)arg1 [, (int)arg2]) -> str :
     |
     |          C++ signature :
     |              std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > get_tx_antenna(uhd
::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_tx_antennas(...)
     |      get_tx_antennas( (multi_usrp)arg1 [, (int)arg2]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_tx_antennas(uhd::usr
p::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_tx_bandwidth(...)
     |      get_tx_bandwidth( (multi_usrp)arg1 [, (int)arg2]) -> float :
     |
     |          C++ signature :
     |              double get_tx_bandwidth(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_tx_bandwidth_range(...)
     |      get_tx_bandwidth_range( (multi_usrp)arg1 [, (int)arg2]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_tx_bandwidth_range(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_tx_dboard_iface(...)
     |      get_tx_dboard_iface( (multi_usrp)arg1 [, (int)arg2]) -> dboard_iface :
     |
     |          C++ signature :
     |              boost::shared_ptr<uhd::usrp::dboard_iface> get_tx_dboard_iface(uhd::usrp::multi_usrp {lvalue} [,un
signed long])
     |
     |  get_tx_freq(...)
     |      get_tx_freq( (multi_usrp)arg1 [, (int)arg2]) -> float :
     |
     |          C++ signature :
     |              double get_tx_freq(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_tx_freq_range(...)
     |      get_tx_freq_range( (multi_usrp)arg1 [, (int)arg2]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_tx_freq_range(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_tx_gain(...)
     |      get_tx_gain( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> float :
     |
     |          C++ signature :
     |              double get_tx_gain(uhd::usrp::multi_usrp*,std::__cxx11::basic_string<char, std::char_traits<char>,
 std::allocator<char> > [,unsigned long])
     |
     |      get_tx_gain( (multi_usrp)arg1 [, (int)arg2]) -> float :
     |
     |          C++ signature :
     |              double get_tx_gain(uhd::usrp::multi_usrp* [,unsigned long])
     |
     |  get_tx_gain_names(...)
     |      get_tx_gain_names( (multi_usrp)arg1 [, (int)arg2]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_tx_gain_names(uhd::u
srp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_tx_gain_profile(...)
     |      get_tx_gain_profile( (multi_usrp)arg1 [, (int)arg2]) -> str :
     |
     |          C++ signature :
     |              std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > get_tx_gain_profil
e(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_tx_gain_profile_names(...)
     |      get_tx_gain_profile_names( (multi_usrp)arg1 [, (int)arg2]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_tx_gain_profile_name
s(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_tx_gain_range(...)
     |      get_tx_gain_range( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_tx_gain_range(uhd::usrp::multi_usrp*,std::__cxx11::basic_string<char, std::c
har_traits<char>, std::allocator<char> > [,unsigned long])
     |
     |      get_tx_gain_range( (multi_usrp)arg1 [, (int)arg2]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_tx_gain_range(uhd::usrp::multi_usrp* [,unsigned long])
     |
     |  get_tx_lo_export_enabled(...)
     |      get_tx_lo_export_enabled( (multi_usrp)arg1 [, (str)arg2 [, (int)arg3]]) -> bool :
     |
     |          C++ signature :
     |              bool get_tx_lo_export_enabled(uhd::usrp::multi_usrp {lvalue} [,std::__cxx11::basic_string<char, st
d::char_traits<char>, std::allocator<char> > [,unsigned long]])
     |
     |  get_tx_lo_freq(...)
     |      get_tx_lo_freq( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> float :
     |
     |          C++ signature :
     |              double get_tx_lo_freq(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char, std::char_tr
aits<char>, std::allocator<char> > [,unsigned long])
     |
     |  get_tx_lo_freq_range(...)
     |      get_tx_lo_freq_range( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_tx_lo_freq_range(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<c
har, std::char_traits<char>, std::allocator<char> > [,unsigned long])
     |
     |  get_tx_lo_names(...)
     |      get_tx_lo_names( (multi_usrp)arg1 [, (int)arg2]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_tx_lo_names(uhd::usr
p::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_tx_lo_source(...)
     |      get_tx_lo_source( (multi_usrp)arg1 [, (str)arg2 [, (int)arg3]]) -> str :
     |
     |          C++ signature :
     |              std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > get_tx_lo_source(u
hd::usrp::multi_usrp {lvalue} [,std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > [,unsi
gned long]])
     |
     |  get_tx_lo_sources(...)
     |      get_tx_lo_sources( (multi_usrp)arg1 [, (str)arg2 [, (int)arg3]]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_tx_lo_sources(uhd::u
srp::multi_usrp {lvalue} [,std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > [,unsigned
long]])
     |
     |  get_tx_num_channels(...)
     |      get_tx_num_channels( (multi_usrp)arg1) -> int :
     |
     |          C++ signature :
     |              unsigned long get_tx_num_channels(uhd::usrp::multi_usrp {lvalue})
     |
     |  get_tx_rate(...)
     |      get_tx_rate( (multi_usrp)arg1 [, (int)arg2]) -> float :
     |
     |          C++ signature :
     |              double get_tx_rate(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_tx_rates(...)
     |      get_tx_rates( (multi_usrp)arg1 [, (int)arg2]) -> meta_range :
     |
     |          C++ signature :
     |              uhd::meta_range_t get_tx_rates(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_tx_sensor(...)
     |      get_tx_sensor( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> sensor_value :
     |
     |          C++ signature :
     |              uhd::sensor_value_t get_tx_sensor(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char,
std::char_traits<char>, std::allocator<char> > [,unsigned long])
     |
     |  get_tx_sensor_names(...)
     |      get_tx_sensor_names( (multi_usrp)arg1 [, (int)arg2]) -> object :
     |
     |          C++ signature :
     |              std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::
allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > get_tx_sensor_names(uhd:
:usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_tx_stream(...)
     |      get_tx_stream( (multi_usrp)arg1, (stream_args)arg2) -> tx_streamer :
     |
     |          C++ signature :
     |              boost::shared_ptr<uhd::tx_streamer> get_tx_stream(uhd::usrp::multi_usrp {lvalue},uhd::stream_args_
t)
     |
     |  get_tx_subdev_name(...)
     |      get_tx_subdev_name( (multi_usrp)arg1 [, (int)arg2]) -> str :
     |
     |          C++ signature :
     |              std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > get_tx_subdev_name
(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_tx_subdev_spec(...)
     |      get_tx_subdev_spec( (multi_usrp)arg1 [, (int)arg2]) -> subdev_spec :
     |
     |          C++ signature :
     |              uhd::usrp::subdev_spec_t get_tx_subdev_spec(uhd::usrp::multi_usrp {lvalue} [,unsigned long])
     |
     |  get_usrp_rx_info(...)
     |      get_usrp_rx_info( (multi_usrp)arg1 [, (int)arg2]) -> object :
     |
     |          C++ signature :
     |              uhd::dict<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__
cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > get_usrp_rx_info(uhd::usrp::multi_usrp {lva
lue} [,unsigned long])
     |
     |  get_usrp_tx_info(...)
     |      get_usrp_tx_info( (multi_usrp)arg1 [, (int)arg2]) -> object :
     |
     |          C++ signature :
     |              uhd::dict<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__
cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > get_usrp_tx_info(uhd::usrp::multi_usrp {lva
lue} [,unsigned long])
     |
     |  issue_stream_cmd(...)
     |      issue_stream_cmd( (multi_usrp)arg1, (stream_cmd)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void issue_stream_cmd(uhd::usrp::multi_usrp {lvalue},uhd::stream_cmd_t [,unsigned long])
     |
     |  read_register(...)
     |      read_register( (multi_usrp)arg1, (str)arg2, (int)arg3 [, (int)arg4]) -> int :
     |
     |          C++ signature :
     |              unsigned long read_register(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char, std::c
har_traits<char>, std::allocator<char> >,unsigned int [,unsigned long])
     |
     |  set_clock_config(...)
     |      set_clock_config( (multi_usrp)arg1, (object)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_clock_config(uhd::usrp::multi_usrp {lvalue},uhd::clock_config_t [,unsigned long])
     |
     |  set_clock_source(...)
     |      set_clock_source( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_clock_source(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char, std::char_tr
aits<char>, std::allocator<char> > [,unsigned long])
     |
     |  set_clock_source_out(...)
     |      set_clock_source_out( (multi_usrp)arg1, (bool)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_clock_source_out(uhd::usrp::multi_usrp {lvalue},bool [,unsigned long])
     |
     |  set_command_time(...)
     |      set_command_time( (multi_usrp)arg1, (time_spec)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_command_time(uhd::usrp::multi_usrp {lvalue},uhd::time_spec_t [,unsigned long])
     |
     |  set_filter(...)
     |      set_filter( (multi_usrp)arg1, (str)arg2, (filter_info_base)arg3) -> None :
     |
     |          C++ signature :
     |              void set_filter(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char, std::char_traits<c
har>, std::allocator<char> >,boost::shared_ptr<uhd::filter_info_base>)
     |
     |  set_gpio_attr(...)
     |      set_gpio_attr( (multi_usrp)arg1, (str)arg2, (str)arg3, (int)arg4 [, (int)arg5 [, (int)arg6]]) -> None :
     |
     |          C++ signature :
     |              void set_gpio_attr(uhd::usrp::multi_usrp*,std::__cxx11::basic_string<char, std::char_traits<char>,
 std::allocator<char> >,std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,unsigned int [
,unsigned int [,unsigned long]])
     |
     |      set_gpio_attr( (multi_usrp)arg1, (str)arg2, (str)arg3, (str)arg4 [, (int)arg5 [, (int)arg6]]) -> None :
     |
     |          C++ signature :
     |              void set_gpio_attr(uhd::usrp::multi_usrp*,std::__cxx11::basic_string<char, std::char_traits<char>,
 std::allocator<char> >,std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,std::__cxx11::
basic_string<char, std::char_traits<char>, std::allocator<char> > [,unsigned int [,unsigned long]])
     |
     |  set_master_clock_rate(...)
     |      set_master_clock_rate( (multi_usrp)arg1, (float)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_master_clock_rate(uhd::usrp::multi_usrp {lvalue},double [,unsigned long])
     |
     |  set_normalized_rx_gain(...)
     |      set_normalized_rx_gain( (multi_usrp)arg1, (float)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_normalized_rx_gain(uhd::usrp::multi_usrp {lvalue},double [,unsigned long])
     |
     |  set_normalized_tx_gain(...)
     |      set_normalized_tx_gain( (multi_usrp)arg1, (float)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_normalized_tx_gain(uhd::usrp::multi_usrp {lvalue},double [,unsigned long])
     |
     |  set_rx_agc(...)
     |      set_rx_agc( (multi_usrp)arg1, (bool)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_rx_agc(uhd::usrp::multi_usrp {lvalue},bool [,unsigned long])
     |
     |  set_rx_antenna(...)
     |      set_rx_antenna( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_rx_antenna(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char, std::char_trai
ts<char>, std::allocator<char> > [,unsigned long])
     |
     |  set_rx_bandwidth(...)
     |      set_rx_bandwidth( (multi_usrp)arg1, (float)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_rx_bandwidth(uhd::usrp::multi_usrp {lvalue},double [,unsigned long])
     |
     |  set_rx_dc_offset(...)
     |      set_rx_dc_offset( (multi_usrp)arg1, (bool)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_rx_dc_offset(uhd::usrp::multi_usrp*,bool [,unsigned long])
     |
     |      set_rx_dc_offset( (multi_usrp)arg1, (complex)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_rx_dc_offset(uhd::usrp::multi_usrp*,std::complex<double> [,unsigned long])
     |
     |  set_rx_freq(...)
     |      set_rx_freq( (multi_usrp)arg1, (tune_request)arg2 [, (int)arg3]) -> tune_result :
     |
     |          C++ signature :
     |              uhd::tune_result_t set_rx_freq(uhd::usrp::multi_usrp {lvalue},uhd::tune_request_t [,unsigned long]
)
     |
     |  set_rx_gain(...)
     |      set_rx_gain( (multi_usrp)arg1, (float)arg2, (str)arg3 [, (int)arg4]) -> None :
     |
     |          C++ signature :
     |              void set_rx_gain(uhd::usrp::multi_usrp*,double,std::__cxx11::basic_string<char, std::char_traits<c
har>, std::allocator<char> > [,unsigned long])
     |
     |      set_rx_gain( (multi_usrp)arg1, (float)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_rx_gain(uhd::usrp::multi_usrp*,double [,unsigned long])
     |
     |  set_rx_gain_profile(...)
     |      set_rx_gain_profile( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_rx_gain_profile(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char, std::char
_traits<char>, std::allocator<char> > [,unsigned long])
     |
     |  set_rx_iq_balance(...)
     |      set_rx_iq_balance( (multi_usrp)arg1, (bool)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_rx_iq_balance(uhd::usrp::multi_usrp*,bool [,unsigned long])
     |
     |      set_rx_iq_balance( (multi_usrp)arg1, (complex)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_rx_iq_balance(uhd::usrp::multi_usrp*,std::complex<double> [,unsigned long])
     |
     |  set_rx_lo_export_enabled(...)
     |      set_rx_lo_export_enabled( (multi_usrp)arg1, (bool)arg2 [, (str)arg3 [, (int)arg4]]) -> None :
     |
     |          C++ signature :
     |              void set_rx_lo_export_enabled(uhd::usrp::multi_usrp {lvalue},bool [,std::__cxx11::basic_string<cha
r, std::char_traits<char>, std::allocator<char> > [,unsigned long]])
     |
     |  set_rx_lo_freq(...)
     |      set_rx_lo_freq( (multi_usrp)arg1, (float)arg2, (str)arg3 [, (int)arg4]) -> float :
     |
     |          C++ signature :
     |              double set_rx_lo_freq(uhd::usrp::multi_usrp {lvalue},double,std::__cxx11::basic_string<char, std::
char_traits<char>, std::allocator<char> > [,unsigned long])
     |
     |  set_rx_lo_source(...)
     |      set_rx_lo_source( (multi_usrp)arg1, (str)arg2 [, (str)arg3 [, (int)arg4]]) -> None :
     |
     |          C++ signature :
     |              void set_rx_lo_source(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char, std::char_tr
aits<char>, std::allocator<char> > [,std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > [
,unsigned long]])
     |
     |  set_rx_rate(...)
     |      set_rx_rate( (multi_usrp)arg1, (float)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_rx_rate(uhd::usrp::multi_usrp {lvalue},double [,unsigned long])
     |
     |  set_rx_subdev_spec(...)
     |      set_rx_subdev_spec( (multi_usrp)arg1, (subdev_spec)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_rx_subdev_spec(uhd::usrp::multi_usrp {lvalue},uhd::usrp::subdev_spec_t [,unsigned long])
     |
     |  set_time_next_pps(...)
     |      set_time_next_pps( (multi_usrp)arg1, (time_spec)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_time_next_pps(uhd::usrp::multi_usrp {lvalue},uhd::time_spec_t [,unsigned long])
     |
     |  set_time_now(...)
     |      set_time_now( (multi_usrp)arg1, (time_spec)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_time_now(uhd::usrp::multi_usrp {lvalue},uhd::time_spec_t [,unsigned long])
     |
     |  set_time_source(...)
     |      set_time_source( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_time_source(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char, std::char_tra
its<char>, std::allocator<char> > [,unsigned long])
     |
     |  set_time_source_out(...)
     |      set_time_source_out( (multi_usrp)arg1, (bool)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_time_source_out(uhd::usrp::multi_usrp {lvalue},bool [,unsigned long])
     |
     |  set_time_unknown_pps(...)
     |      set_time_unknown_pps( (multi_usrp)arg1, (time_spec)arg2) -> None :
     |
     |          C++ signature :
     |              void set_time_unknown_pps(uhd::usrp::multi_usrp {lvalue},uhd::time_spec_t)
     |
     |  set_tx_antenna(...)
     |      set_tx_antenna( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_tx_antenna(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char, std::char_trai
ts<char>, std::allocator<char> > [,unsigned long])
     |
     |  set_tx_bandwidth(...)
     |      set_tx_bandwidth( (multi_usrp)arg1, (float)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_tx_bandwidth(uhd::usrp::multi_usrp {lvalue},double [,unsigned long])
     |
     |  set_tx_dc_offset(...)
     |      set_tx_dc_offset( (multi_usrp)arg1, (bool)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_tx_dc_offset(uhd::usrp::multi_usrp*,bool [,unsigned long])
     |
     |      set_tx_dc_offset( (multi_usrp)arg1, (complex)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_tx_dc_offset(uhd::usrp::multi_usrp*,std::complex<double> [,unsigned long])
     |
     |  set_tx_freq(...)
     |      set_tx_freq( (multi_usrp)arg1, (tune_request)arg2 [, (int)arg3]) -> tune_result :
     |
     |          C++ signature :
     |              uhd::tune_result_t set_tx_freq(uhd::usrp::multi_usrp {lvalue},uhd::tune_request_t [,unsigned long]
)
     |
     |  set_tx_gain(...)
     |      set_tx_gain( (multi_usrp)arg1, (float)arg2, (str)arg3 [, (int)arg4]) -> None :
     |
     |          C++ signature :
     |              void set_tx_gain(uhd::usrp::multi_usrp*,double,std::__cxx11::basic_string<char, std::char_traits<c
har>, std::allocator<char> > [,unsigned long])
     |
     |      set_tx_gain( (multi_usrp)arg1, (float)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_tx_gain(uhd::usrp::multi_usrp*,double [,unsigned long])
     |
     |  set_tx_gain_profile(...)
     |      set_tx_gain_profile( (multi_usrp)arg1, (str)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_tx_gain_profile(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char, std::char
_traits<char>, std::allocator<char> > [,unsigned long])
     |
     |  set_tx_iq_balance(...)
     |      set_tx_iq_balance( (multi_usrp)arg1, (complex)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_tx_iq_balance(uhd::usrp::multi_usrp {lvalue},std::complex<double> [,unsigned long])
     |
     |  set_tx_lo_export_enabled(...)
     |      set_tx_lo_export_enabled( (multi_usrp)arg1, (bool)arg2 [, (str)arg3 [, (int)arg4]]) -> None :
     |
     |          C++ signature :
     |              void set_tx_lo_export_enabled(uhd::usrp::multi_usrp {lvalue},bool [,std::__cxx11::basic_string<cha
r, std::char_traits<char>, std::allocator<char> > [,unsigned long]])
     |
     |  set_tx_lo_freq(...)
     |      set_tx_lo_freq( (multi_usrp)arg1, (float)arg2, (str)arg3 [, (int)arg4]) -> float :
     |
     |          C++ signature :
     |              double set_tx_lo_freq(uhd::usrp::multi_usrp {lvalue},double,std::__cxx11::basic_string<char, std::
char_traits<char>, std::allocator<char> > [,unsigned long])
     |
     |  set_tx_lo_source(...)
     |      set_tx_lo_source( (multi_usrp)arg1, (str)arg2 [, (str)arg3 [, (int)arg4]]) -> None :
     |
     |          C++ signature :
     |              void set_tx_lo_source(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char, std::char_tr
aits<char>, std::allocator<char> > [,std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > [
,unsigned long]])
     |
     |  set_tx_rate(...)
     |      set_tx_rate( (multi_usrp)arg1, (float)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_tx_rate(uhd::usrp::multi_usrp {lvalue},double [,unsigned long])
     |
     |  set_tx_subdev_spec(...)
     |      set_tx_subdev_spec( (multi_usrp)arg1, (subdev_spec)arg2 [, (int)arg3]) -> None :
     |
     |          C++ signature :
     |              void set_tx_subdev_spec(uhd::usrp::multi_usrp {lvalue},uhd::usrp::subdev_spec_t [,unsigned long])
     |
     |  set_user_register(...)
     |      set_user_register( (multi_usrp)arg1, (int)arg2, (int)arg3 [, (int)arg4]) -> None :
     |
     |          C++ signature :
     |              void set_user_register(uhd::usrp::multi_usrp {lvalue},unsigned char,unsigned int [,unsigned long])
     |
     |  write_register(...)
     |      write_register( (multi_usrp)arg1, (str)arg2, (int)arg3, (int)arg4 [, (int)arg5]) -> None :
     |
     |          C++ signature :
     |              void write_register(uhd::usrp::multi_usrp {lvalue},std::__cxx11::basic_string<char, std::char_trai
ts<char>, std::allocator<char> >,unsigned int,unsigned long [,unsigned long])
     |
     |  ----------------------------------------------------------------------
     |  Static methods inherited from libpyuhd.usrp.multi_usrp:
     |
     |  make(...)
     |      make( (str)arg1) -> multi_usrp :
     |
     |          C++ signature :
     |              boost::shared_ptr<uhd::usrp::multi_usrp> make(uhd::device_addr_t)
     |
     |  ----------------------------------------------------------------------
     |  Methods inherited from Boost.Python.instance:
     |
     |  __new__(*args, **kwargs) from Boost.Python.class
     |      Create and return a new object.  See help(type) for accurate signature.
     |
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Boost.Python.instance:
     |
     |  __dict__
     |
     |  __weakref__

FILE
    /usr/lib/python3/dist-packages/uhd/usrp.py
